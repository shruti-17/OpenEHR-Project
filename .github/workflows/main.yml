
name: CI

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Build the docker_compose
      run: docker-compose build
      
#     - name: Docker login
#       env:
#         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}   
#         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
#       run: |
#         docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#     - name: Docker build
#       run: |
#         docker build . --file Dockerfile --tag 921079650/eapr.group.c:latest

#     -  name: Docker push
#        run: |
#         docker push 921079650/eapr.group.c

  deploy-to-test:
    # Only run this job if "build" has ended successfully
    needs:
      - build
      
    runs-on: ubuntu-latest

    steps:
      
      - name: Install AWS CLI 
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      


      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: CONNECT TO EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            #Now we have got the access of EC2 and we will start the deploy .
            sudo kill -9 $(sudo lsof -t -i:4005)
            pwd
            sudo docker pull 921079650/eapr.group.c
            sudo docker run -d -p 80:3000 --name eapr 921079650/eapr.group.c
            '


      
